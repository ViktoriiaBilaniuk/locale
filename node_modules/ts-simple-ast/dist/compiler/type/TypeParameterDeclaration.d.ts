import * as ts from "typescript";
import { NamedNode } from "./../base";
import { Node } from "./../common";
import { TypeNode } from "./TypeNode";
export declare const TypeParameterDeclarationBase: (new (...args: any[]) => NamedNode) & typeof Node;
export declare class TypeParameterDeclaration extends TypeParameterDeclarationBase<ts.TypeParameterDeclaration> {
    /**
     * Gets the constraint node.
     */
    getConstraintNode(): TypeNode | undefined;
    /**
     * Gets the default node.
     */
    getDefaultNode(): TypeNode | undefined;
    /**
     * Removes this type parameter.
     */
    remove(): void;
}
