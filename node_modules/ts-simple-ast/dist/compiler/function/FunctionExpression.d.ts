import * as ts from "typescript";
import { Expression } from "./../common";
import { DocumentationableNode, NameableNode, ModifierableNode, AsyncableNode, GeneratorableNode, BodiedNode, TextInsertableNode } from "./../base";
import { StatementedNode } from "./../statement";
import { SignaturedDeclaration } from "./SignaturedDeclaration";
export declare const FunctionExpressionBase: (new (...args: any[]) => DocumentationableNode) & (new (...args: any[]) => TextInsertableNode) & (new (...args: any[]) => BodiedNode) & (new (...args: any[]) => AsyncableNode) & (new (...args: any[]) => GeneratorableNode) & (new (...args: any[]) => StatementedNode) & (new (...args: any[]) => SignaturedDeclaration) & (new (...args: any[]) => ModifierableNode) & (new (...args: any[]) => NameableNode) & typeof Expression;
export declare class FunctionExpression extends FunctionExpressionBase<ts.FunctionExpression> {
}
