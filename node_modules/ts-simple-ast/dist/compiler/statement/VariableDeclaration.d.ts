import * as ts from "typescript";
import { VariableDeclarationStructure } from "./../../structures";
import { Node } from "./../common";
import { InitializerExpressionableNode, BindingNamedNode, TypedNode } from "./../base";
export declare const VariableDeclarationBase: (new (...args: any[]) => TypedNode) & (new (...args: any[]) => InitializerExpressionableNode) & (new (...args: any[]) => BindingNamedNode) & typeof Node;
export declare class VariableDeclaration extends VariableDeclarationBase<ts.VariableDeclaration> {
    /**
     * Fills this node with the specified structure.
     * @param structure - Structure to fill.
     */
    fill(structure: Partial<VariableDeclarationStructure>): this;
    /**
     * Removes this variable declaration.
     */
    remove(): void;
}
